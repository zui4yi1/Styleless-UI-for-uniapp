{
  // Place your Styleless-UI-for-uniapp 工作区 snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  "vue-base-component": {
    "scope": "vue",
    "prefix": "vue-base-component",
    "body": [
      "<template>\r  <view :class=\"[clz.root(), className]\" class=\"\"></view>\r</template>\r<script lang=\"ts\">\r  import { useClassName } from '../../hooks/use-class-name';\r  const ComponentName = 'sl-$1';\r  const clz = useClassName(ComponentName);\r  export default {\r    name: ComponentName,\r    options: {\r      virtualHost: true,\r      inheritAttrs: false,\r    },\r  };\r</script>\r<script setup lang=\"ts\">\r  import { props } from './_props';\r\r  const _props = defineProps(props);\r  const _emits = defineEmits(['click']);\r</script>\r",
      "$2"
    ],
    "description": "snippets for base components"
  },
  "vue-base-component-props": {
    "scope": "typescript",
    "prefix": "vue-base-component-props",
    "body": [
      "export const props = {\r  /**\r   * @description inject global classNames to the component root\r   */\r  className: {\r    type: [String, Array],\r    default: '',\r  },\r  xxx: {\r    type: String,\r    default: '',\r  },\r};\r",
      "$2"
    ],
    "description": "snippets for base components props"
  },
  "vue-base-component-index": {
    "scope": "typescript",
    "prefix": "vue-base-component-index",
    "body": [
      "import type ISlXXX from './sl-XXX.vue';\rimport _SlXXX from './sl-XXX.vue';\r\rexport const SlXXX = _SlXXX;\r\rexport type SlXXXInstance = InstanceType<typeof ISlXXX>;\rexport default _SlXXX;\r",
      "$2"
    ],
    "description": "snippets for base components props"
  },
  "vue-examples": {
    "scope": "vue",
    "prefix": "vue-examples",
    "body": [
      "<template>\r  <s-page title=\"XXXX\" className=\"plr-l\">\r    <Brief desc=\"XXXX\" />\r    <Tip title=\"测试\" />\r  </s-page>\r</template>\r<script setup lang=\"ts\">\r  import Brief from '../_components/brief/index.vue';\r  import SPage from '../_components/s-page/index.vue';\r  import Tip from '../_components/tip/index.vue';\r\r  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r  const themes = ['primary', 'success', 'error'];\r</script>\r",
      "$2"
    ],
    "description": "snippets for base components props"
  }
}
